// Generated by CoffeeScript 1.7.1
Mifan.controller("friendCtrl", function($scope, $routeParams, $location) {
  var friend, isFansPage, myself, setFollowBtn, switchFeed, userid;
  userid = $routeParams.id || null;
  $scope.myself = myself = !userid ? true : $scope.UID === userid;
  isFansPage = $location.$$url.indexOf("fans") > -1;
  $scope.$on("$viewContentLoaded", function() {
    return $scope.$emit("pageChange", "friend");
  });
  $scope.feedType = isFansPage ? "fans" : "follow";
  $scope.switchFeed = switchFeed = function(type) {
    if (type == null) {
      type = "follow";
    }
    if (type === friend.curType) {
      return false;
    }
    $scope.feedType = type;
    $scope.isLoading = false;
    $scope.dataLoaded = false;
    $scope.dataLists = null;
    $scope.$emit("onClearPaginationData");
    friend.curType = type;
    switch (type) {
      case "follow":
        friend.getFollow(1);
        return $scope.getPage = friend.getFollow;
      default:
        friend.getFans(1);
        return $scope.getPage = friend.getFans;
    }
  };
  setFollowBtn = function(iffollow) {
    var followBtn;
    iffollow = iffollow || 0;
    followBtn = {};
    switch (iffollow - 0) {
      case 0:
        followBtn = {
          txt: "",
          cls: "success"
        };
        break;
      case 1:
        followBtn = {
          txt: "取消",
          cls: "warning"
        };
        break;
      case 2:
        followBtn = {
          txt: "互相",
          cls: "warning"
        };
    }
    followBtn.txt += "关注";
    return followBtn;
  };
  $scope.ta = myself ? "我" : "TA";
  friend = {
    init: function() {
      $scope.$on("onGetUserFollowsCb", function(e, data) {
        return friend.getFollowCb(data);
      });
      $scope.$on("onGetUserFansCb", function(e, data) {
        return friend.getFansCb(data);
      });
      switchFeed($scope.feedType);
      return $scope.theuser = userid;
    },
    getFollow: function(page) {
      var uid;
      if (page == null) {
        page = 1;
      }
      $scope.$emit("onPaginationStartChange", page);
      uid = myself ? $scope.UID : userid;
      return $scope.$emit("onGetUserFollows", {
        page: page,
        uid: uid
      });
    },
    getFollowCb: function(data) {
      var dataLists, msg, pageData, result, ret;
      ret = data.ret, msg = data.msg, result = data.result;
      if (result && result.page) {
        dataLists = result["list"];
        $scope.dataLists = dataLists;
        pageData = result["page"];
        if (pageData) {
          $scope.$emit("onPaginationGeted", pageData);
        }
      } else {
        $scope.errorMsg = msg;
      }
      return $scope.dataLoaded = true;
    },
    getFans: function(page) {
      var uid;
      if (page == null) {
        page = 1;
      }
      $scope.$emit("onPaginationStartChange", page);
      uid = myself ? $scope.UID : userid;
      return $scope.$emit("onGetUserFans", {
        page: page,
        uid: uid
      });
    },
    getFansCb: function(data) {
      var dataLists, msg, pageData, result, ret;
      ret = data.ret, msg = data.msg, result = data.result;
      if (result && result.page) {
        dataLists = result["list"];
        $scope.dataLists = dataLists;
        pageData = result["page"];
        if (pageData) {
          $scope.$emit("onPaginationGeted", pageData);
        }
      } else {
        $scope.errorMsg = msg;
      }
      return $scope.dataLoaded = true;
    }
  };
  return friend.init();
});
