// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("quesDetailCtrl", function($scope, $timeout, $http, $routeParams, $location) {
  var askid, ques;
  $scope.$on("$viewContentLoaded", function() {
    return $scope.$emit("pageChange", "ques");
  });
  askid = $routeParams.id;
  ques = {
    init: function() {
      ques.getInfo(askid);
      ques.getAns(1);
      $scope.$on("onGetAskInfoCb", function(e, data) {
        return ques.getInfoCb(data);
      });
      $scope.$on("onGetAskAnswersCb", function(e, data) {
        return ques.getAnsCb(data);
      });
      return $scope.getPage = ques.getAns;
    },
    getInfo: function(askid) {
      return $scope.$emit("onGetAskInfo", askid);
    },
    getInfoCb: function(data) {
      var result, ret;
      ret = data.ret, result = data.result;
      if (String(ret) === "100000") {
        $scope.askInfo = result;
      }
      return $scope.dataInfoLoaded = true;
    },
    getAns: function(page) {
      if (page == null) {
        page = 1;
      }
      $scope.$emit("onGetAskAnswers", {
        askid: askid,
        page: page
      });
      return $scope.$emit("onPaginationStartChange", page);
    },
    getAnsCb: function(data) {
      var ans, askAns, result, ret, _i, _len;
      ret = data.ret, result = data.result;
      if (String(ret) === "100000") {
        askAns = result["list"];
        for (_i = 0, _len = askAns.length; _i < _len; _i++) {
          ans = askAns[_i];
          ans.ask = {
            askid: askid
          };
        }
        $scope.askAns = askAns;
        $scope.$emit("onPaginationGeted", result["page"]);
      }
      return $scope.dataLoaded = true;
    }
  };
  return ques.init();
});
