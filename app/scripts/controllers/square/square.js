// Generated by CoffeeScript 1.7.1
Mifan.controller("squareCtrl", function($scope, $http, $random) {
  var MAX_SQUARE_PAGE, setFollowBtn, square;
  $scope.$on("$viewContentLoaded", function() {
    return $scope.$emit("pageChange", "square");
  });
  MAX_SQUARE_PAGE = 20;
  setFollowBtn = function(iffollow) {
    var followBtn;
    iffollow = iffollow || 0;
    followBtn = {};
    switch (iffollow - 0) {
      case 0:
        followBtn = {
          txt: "",
          cls: "success"
        };
        break;
      case 1:
        followBtn = {
          txt: "取消",
          cls: "warning"
        };
        break;
      case 2:
        followBtn = {
          txt: "互相",
          cls: "warning"
        };
    }
    followBtn.txt += "关注";
    return followBtn;
  };
  square = {
    init: function() {
      square.getNews(1);
      square.getUsers(1);
      $scope.$emit("onClearPaginationData");
      $scope.refreshFeed = square.refreshFeed;
      return $scope.refreshUsers = square.refreshUsers;
    },
    totalPage: 0,
    getNews: function(page) {
      var api;
      if (page == null) {
        page = 1;
      }
      api = "" + API.squareask + $scope.privacyParamDir + "/page/" + page + "?type=latest";
      if (IsDebug) {
        api = API.squareask;
      }
      return $http.get(api).success(square.getNewsCb);
    },
    getNewsCb: function(data) {
      var dataLists, everyoneAskLists, msg, result, ret, _i, _ref, _results;
      ret = data.ret, msg = data.msg, result = data.result;
      if (msg === "ok") {
        $scope.dataLists = dataLists = result['list'] || [];
        square.totalPage = result["page"]["total_page"];
        $scope.everyoneAskLists = everyoneAskLists = [
          dataLists[$random["in"]((function() {
            _results = [];
            for (var _i = 0, _ref = dataLists.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
            return _results;
          }).apply(this))]
        ];
      } else {
        $scope.errorMsg = msg;
      }
      return $scope.dataLoaded = true;
    },
    refreshFeed: function() {
      var max, page, _i, _results;
      max = square.totalPage > MAX_SQUARE_PAGE ? MAX_SQUARE_PAGE : square.totalPage;
      page = $random["in"]((function() {
        _results = [];
        for (var _i = 1; 1 <= max ? _i <= max : _i >= max; 1 <= max ? _i++ : _i--){ _results.push(_i); }
        return _results;
      }).apply(this));
      $scope.dataLoaded = false;
      return square.getNews(page);
    },
    getUsers: function(page) {
      var api;
      if (page == null) {
        page = 1;
      }
      api = "" + API.squareusers + $scope.privacyParamDir + "/page/" + page + "?type=latest";
      if (IsDebug) {
        api = API.squareusers;
      }
      return $http.get(api).success(square.getUsersCb);
    },
    getUsersCb: function(data) {
      var msg, result, ret, userLists;
      ret = data.ret, msg = data.msg, result = data.result;
      if (msg === "ok") {
        $scope.userLists = userLists = result["list"] || [];
        square.totalUserPage = result["page"]["total_page"];
      } else {
        $scope.errorMsg = msg;
      }
      return $scope.userDataLoaded = true;
    },
    refreshUsers: function() {
      var max, page, _i, _results;
      max = square.totalUserPage > MAX_SQUARE_PAGE ? MAX_SQUARE_PAGE : square.totalUserPage;
      page = $random["in"]((function() {
        _results = [];
        for (var _i = 1; 1 <= max ? _i <= max : _i >= max; 1 <= max ? _i++ : _i--){ _results.push(_i); }
        return _results;
      }).apply(this));
      $scope.userDataLoaded = false;
      return square.getUsers(page);
    }
  };
  return square.init();
});
