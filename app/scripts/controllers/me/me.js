// Generated by CoffeeScript 1.7.1
"use strict";
Mifan.controller("meCtrl", function($scope, $timeout, $http) {
  var legalFeedTypes, me;
  $scope.$on("$viewContentLoaded", function() {
    return $scope.$emit("pageChange", "me");
  });
  legalFeedTypes = ["ask", "answer", "love"];
  $scope.feedType = "ask";
  $scope.ta = "æˆ‘";
  $scope.loadingMore = function() {
    return $scope.isLoading = true;
  };
  $scope.switchFeed = function(type) {
    type = type || "ask";
    if (type === me.curType) {
      return false;
    }
    $scope.feedType = type;
    $scope.isLoading = false;
    $scope.dataLoaded = false;
    $scope.$emit("onClearPaginationData");
    me.curType = type;
    switch (type) {
      case "answer":
        me.getMyAnswer(1);
        return $scope.getPage = me.getMyAnswer;
      case "love":
        me.getMyLove(1);
        return $scope.getPage = me.getMyLove;
      default:
        me.getMyAsk(1);
        return $scope.getPage = me.getMyAsk;
    }
  };
  $scope.profile = $scope.user;
  me = {
    init: function() {
      $scope.myAsk = $scope.myAnswer = $scope.myLove = [];
      $scope.myAskMore = $scope.myAnswerMore = $scope.myLoveMore = false;
      $scope.myself = true;
      return $scope.switchFeed("");
    },
    feedWatcher: function(feed) {
      if (feed == null) {
        feed = "ask";
      }
    },
    curType: "",
    getMyAsk: function(page) {
      var api;
      if (page == null) {
        page = 1;
      }
      api = "" + API.myask + $scope.privacyParamDir + "/page/" + page;
      if (IsDebug) {
        api = API.myask;
      }
      $http.get(api).success(me.getMyAskCb);
      return $scope.$emit("onPaginationStartChange", page);
    },
    getMyAskCb: function(data) {
      var msg, result, ret;
      ret = data.ret, msg = data.msg, result = data.result;
      if (msg === "ok") {
        $scope.myAsk = result['list'] || [];
        $scope.$emit("onPaginationGeted", result['page']);
      } else {
        $scope.errorMsg = msg;
      }
      return $scope.dataLoaded = true;
    },
    getMyAnswer: function(page) {
      var api;
      if (page == null) {
        page = 1;
      }
      api = "" + API.myanswer + $scope.privacyParamDir + "/page/" + page;
      if (IsDebug) {
        api = API.myanswer;
      }
      $http.get(api).success(me.getMyAnswerCb);
      return $scope.$emit("onPaginationStartChange", page);
    },
    getMyAnswerCb: function(data) {
      var msg, result, ret;
      ret = data.ret, msg = data.msg, result = data.result;
      if (msg === "ok") {
        $scope.myAnswer = result['list'] || [];
        $scope.$emit("onPaginationGeted", result['page']);
      } else {
        $scope.errorMsg = msg;
      }
      return $scope.dataLoaded = true;
    },
    getMyLove: function(page) {
      var api;
      if (page == null) {
        page = 1;
      }
      api = "" + API.mylove + $scope.privacyParamDir + "/page/" + page;
      if (IsDebug) {
        api = API.mylove;
      }
      $http.get(api).success(me.getMyLoveCb);
      return $scope.$emit("onPaginationStartChange", page);
    },
    getMyLoveCb: function(data) {
      var msg, result, ret;
      ret = data.ret, msg = data.msg, result = data.result;
      if (msg === "ok") {
        $scope.myLove = result['list'] || [];
        $scope.$emit("onPaginationGeted", result['page']);
      } else {
        $scope.errorMsg = msg;
      }
      return $scope.dataLoaded = true;
    }
  };
  return me.init();
});
